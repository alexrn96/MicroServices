

using AutoMapper;
using Microsoft.EntityFrameworkCore;
using Module.Orders.Infrastructure.Persistence;
using Module.Orders.Shared.DataTransferObjects;
using Module.Orders.Shared.DBModels;
using Module.Orders.Shared.Interfaces;

namespace Module.Orders.Infrastructure.Services;
public class OrderService : IOrderService
{
    private readonly OrderDbContext _dbContext;
    private readonly IMapper _mapper;

    public OrderService(OrderDbContext dbContext, IMapper mapper)
    {
        _dbContext = dbContext;
        _mapper = mapper;
    }
    public async Task<OrderDto> CreateOrder(OrderDto order)
    {
        EntityOrder entityOrder= _mapper.Map<EntityOrder>(order);
         _dbContext.Orders.Add(entityOrder);
        await _dbContext.SaveChangesAsync();
        order.Id = entityOrder.Id; // Assuming Id is generated by the database
        return order;
    }

    public async Task<List<OrderDto>> GetOrders()
    {
        List<EntityOrder> orders = await _dbContext.Orders.ToListAsync();
        return _mapper.Map<List<OrderDto>>(orders);
    }
}
